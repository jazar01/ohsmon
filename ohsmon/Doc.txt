

API

To create a new monitor entry via HTTP GET  

	https://ohsmon.orasi.com/api/mon/V1/record?clientid=Client1&type=ALM&responsetime=400&memo=test

To create a new monitor entry via HTTP POST

	https://ohsmon.orasi.com/api/mon/V1/

	request body contents
	
	{
	"ClientID":"ClientABC",
    
		"Type":"ALM",
	
		"ResponseTime":410,
	
		"Memo":"Test Memo 2"
	
	}


To retrieve data using HTTP GET  

        https://ohsmon.orasi.com/api/mon/V1

	use query string parameters to limit output

	Limit data to a single ClientID
		&ClientID=<ClientID>

	Limit data to a single Type
		&Type=<Type>

	Limit data to records that contain memo data
		&Memo=<Memo>

	Limit data to past n days
		add &days=<n>

	Limit data to last i records
		add &records=<i>


	Notes:  ClientID & Type are case sensitive
		Memo finds records with memo data containing specifed <Memo> (case sensitive)
		A maximum of 5000 records are returned unless otherwise specified

	Example data queries

	Retrieve last 5000 records for particular client
	https://ohsmon.orasi.com/api/mon/V1?clientid=Client1

	Retrieve last 50 records for a particular client
	https://ohsmon.orasi.com/api/mon/V1?clientid=Client1&records=50

	Retrieve last 2 days of data for a particular client
	https://ohsmon.orasi.com/api/mon/V1?clientid=Client1&days=2
	
	Retrieve up to 1000 records for a particular client from the past 30 days with monitor type of ALM
	https://ohsmon.orasi.com/api/mon/V1?clientid=Client1&type=ALM&days=30&records=1000


-------------------------------------------------



http://container-solutions.com/argument-rest-microservices/

Notes:

Installed PostgresSQL 10 on Windows 10.  Used Nuget Npgsql.EntityFrameworkCore.PostgresSQL (2.0.1) in the VS2017 project.
Tested on Windows 10
Installed Docker for Windows
VS2017 deploys to Docker Windows containers but I was unable to get connection o the PostresSQL db on the host
Changed to Docker Linux containers and everything works.  
You must enable the PostgresSQL DB to accept remote connections. 


/* 
 * 
 *  Make sure Postgress is already installed and make an admin user ID and Pwd for connect string (must be full admin)
 *  
 *  in appsettings.json file
 *  
 *    "ConnectionStrings": {
 *           "ohsmondb": "User ID=monroot;Password=1234;Host=<localhost>;Port=5432;Database=ohsmonitor;Pooling=true;"
 *     }
 *  
 *  Create inital databaes using EF Migration
 *  
 *  Edit csproj file  (otherwise you will get "dotnet-ef" not found msg.
 *  USE THIS
 *     <DotNetCliToolReference Include = "Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.0" />
 *  NOT THIS
 *     <PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.0" />
 * 
 *  Powershell from same dir as csproj file
 *      dotnet ef migrations add IntialMigration
 *      dotnet ef database update
 *  
 *  Postgress db with table should be defined now
 *  
 *  Useful 11 min video   https://www.youtube.com/watch?v=md20lQut9EE
 *  
 *  Use of Dotnet EF migration commands https://benjii.me/2016/05/dotnet-ef-migrations-for-asp-net-core/
 *  
 *  * there is a dbscript.sql file that contains the database script commands that can be used
 *  * instead of the EF migration to create the DB. May need editing to comment or remove comments.
 *  * It is probably best to create the monroot user manually before creating the DB and tables using the script.
 */